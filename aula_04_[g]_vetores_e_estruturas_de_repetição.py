# -*- coding: utf-8 -*-
"""Aula 04 - [G] - Vetores e Estruturas de Repetição.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/DaniloRudrigues/eba2bef397b4929f8a0c4ba38b768bd2/aula-04-g-vetores-e-estruturas-de-repeti-o.ipynb

# Exercícios Fundamentais

1. Faça um programa que leia 5 números e informe o maior número.
"""

i = list(range(5))
print('Digite 5 números em seguida: ')
for o in range(5):
 i[o]= float(input('Digite um número: '))
print(max(i))

"""2. Crie uma lista de locais que você gostaria de conhecer no mundo, na ordem do local que você dá mais prioridade para o local que você dá menos prioridade. Exiba a lista nas seguintes configurações:

a) ordem original<br/>
b) ordem alfabética<br/>
c) ordem de prioridades inversa<br/>
d) quantidade de itens
"""

i_prior = ['ibura','coque','coelhos','entrapulso']
print(i_prior)
print(sorted(i_prior))
print(sorted(i_prior,reverse=True))
print(len(i_prior))

"""3. Crie uma lista com os preços dos jogos que você mais gosta.

a) Imprima o preço mais caro;<br/>
b) Imprima o preço mais barato.
"""

p = [1,12,123,1234,12345]
print(max(p))
print(min(p))

"""4. Escreva um programa em Python que leia um vetor V1 de n posições e gere um vetor V2 de tamanho n que é o vetor V1 invertido."""

n = int(input('Digite o tamanho do vetor: '))
v1 = list(range(n))
for k in range(n):
  print('Para o índice',k,': ')
  v1[k] = input('Digite um elemento: ')
  print()
print(v1)

v2 = list(range(n))
for p in range(n):
  q = n-p-1
  v2[p] = v1[q]

print()
print(' O vetor invertido é: ')
print(v2)

"""5. Faça um programa que imprima na tela apenas os números ímpares entre 1 e 50."""

var = range(1,50,2)
for k in range(len(var)):
  print(var[k],end=',')

"""6. Faça um programa que recebe um número de 1 a 10 do usuário e imprime a tabuada de multiplicação desse número"""

var1 = int(input('Escreva um algarismo de 1 a 10: '))

for k in range(11):
  print(var1,' x ',k,' = ',var1*k)

"""7. Faça um programa que recebe do usuário 10 valores de números inteiros, armazena em um vetor e apos percorre-lo exibe qual é o maior valor e a sua posição."""

var1 = list(range(10))
for k in range(10):
  print('Digite o',k+1,'° número inteiro: ')
  var1[k] = int(input())

print()
print(var1)
print()
print('O maior valor é: ',max(var1))
print('A posição no vetor, iniciando a contágem em zero, é: ',var1.index(max(var1)))

"""# Exercícios de Aprofundamento

1. Faça um programa que peça uma nota, entre zero e dez. Mostre uma mensagem caso o valor seja inválido e continue pedindo até que o usuário informe um valor válido.
"""

nota = float(input('Escreva a nota do aluno: '))
while nota < 0 or nota > 10:
  print('Valor Inválido. Tente Novamente.')
  nota = float(input('Escreva a nota do aluno: '))

print()
print('Valor válido, a nota é: ', nota)

"""2. Faça um programa que leia um nome de usuário e a sua senha e não aceite a senha igual ao nome do usuário, mostrando uma mensagem de erro e voltando a pedir as informações."""

nome = str(input('Digite seu nome: '))
sen = str(input('Registre uma senha: '))

while sen == nome:
  print('Senha Inválida. A senha é igual ao nome. Tente Novamente')
  sen = str(input('Digite seu nome: '))

"""3. Encontrar números primos é uma tarefa difícil. Faça um programa que gera uma lista dos números primos existentes entre 1 e um número inteiro informado pelo usuário."""

var1 = int(input('Digite um número inteiro: '))

var2 = list(range(var1+1)) # vetor até var1
var2.pop(0)
var3 = list(range(var1))

var4 = [0] * var1

for i in range(var1):
  for ii in range(var1):
    var3[ii] = var2[i] % var2[ii]
  if var3.count(0) == 2:
    var4[i] = var2[i]


for iii in range(var4.count(0)):
  var4.remove(0) 
print('Os números primos até',var1,'são: ') 
print(var4)

"""4. Faça um programa que calcule o mostre a média aritmética de N notas."""

import statistics
var1 = int(input('Digite a quantidade de notas: '))
var2 = [0]*var1

for i in list(range(var1)):
  print('Digite a ',i+1,'° nota: ')
  var2[i] = float(input())
print()
print('A média das notas é',round(statistics.mean(var2),2))